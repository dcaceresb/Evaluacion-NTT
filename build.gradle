plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
}

group = 'com.dcaceresb'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.security:spring-security-config"
	implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '8.0.1.Final'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.7.1'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'io.hypersistence:hypersistence-utils-hibernate-62:3.5.2'

	implementation "org.mapstruct:mapstruct:1.4.2.Final"

	compileOnly 'org.projectlombok:lombok:1.18.28'
	implementation 'javax.xml.bind:jaxb-api:2.2.7'
	annotationProcessor 'org.projectlombok:lombok:1.18.28'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"

	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testCompileOnly 'org.projectlombok:lombok:1.18.28'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
	runtimeOnly 'com.h2database:h2'
}

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"com/dcaceresb/ntt_test/Application",
					"com/dcaceresb/ntt_test/SecurityConfig",
					"**/dto/*",
					"**/*Entity*",
					"**/common/*"
			])
		}))
	}
}
tasks.named('test') {
	useJUnitPlatform()
}


jacoco {
	toolVersion = "0.8.9"
	reportsDirectory = layout.buildDirectory.dir('reports/jacoco')
}